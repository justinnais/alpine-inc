name: Notes Application CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
      - feature/**

defaults:
  run:
    working-directory: src

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run test-lint


  unit-test:
    needs: linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test-unit

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage-${{ github.sha }}
          path: src/coverage

      - name: Validate code coverage
        uses: codecov/codecov-action@v2
        with:
          directory: src/coverage
          files: coverage-final.json
          fail_ci_if_error: true
          flags: unittests
          verbose: true
          dry_run: true


  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.0
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests 
        run: npm run test-integration
        env:
          MONGO_URL: mongodb://localhost:27017/todos
          APP_PORT: 2000

      - name: Upload integration test artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-coverage-${{ github.sha }}
          path: src/coverage

      - name: Validate code coverage
        uses: codecov/codecov-action@v2
        with:
          directory: src/coverage
          files: coverage-final.json
          fail_ci_if_error: true
          flags: integrationtests
          verbose: true
          dry_run: true

  e2e-test:
    needs: integration-test
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.0
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci
        
      - name: Run node application and wait for server
        run: npm run start & npx wait-on http://localhost:3000

      - name: Install playwright and its dependencies
        run: npx playwright install --with-deps

      - name: Run end-to-end tests
        run: npm run test-e2e
        env:
          MONGO_URL: mongodb://localhost:27017/todos
          APP_PORT: 2000

      - name: Upload e2e test artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report-${{ github.sha }}
          path: src/playwright-report

  sast: 
    needs: e2e-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install NodeJsScan
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install nodejsscan

      - name: Run Node Scan
        run: nodejsscan -d . -o sast-output.json

      - name: Upload e2e test artifact
        uses: actions/upload-artifact@v3
        with:
          name: sast-output-${{ github.sha }}
          path: src/sast-output.json
      - name: Exit if node security vulnerabilities
        run: exit $(cat sast-output.json | jq .total_count.sec)

  package:
    needs: sast
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Package application
        run: npm pack

      - name: Upload notes package
        uses: actions/upload-artifact@v3
        with:
          name: notes-${{ github.sha }}
          path: src/*.tgz
